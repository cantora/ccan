#include <stdio.h>
#include <string.h>
#include "config.h"

/**
 * tok_stream - pulls tokens out of a stream of bytes
 *
 * Example:
 *  const char *input[] = {
 *    "A black hole is a region of sp",
 *    "acetime from which gravity pre",
 *    "vents anything, including ligh",
 *    "t, from escaping."
 *  };
 *  char *tokens[32];
 *  int i, tok_idx;
 *  struct tok_stream ts;
 *  
 *  tok_stream_init(&ts, ' ');
 *  tok_idx = 0;
 *  for(i = 0; i < 4; i++) {
 *    tok_stream_input(&ts, input[i]);
 *    while(tok_stream(&ts, &tokens[tok_idx]) == 0) {
 *      printf("token '%s'\n", tokens[tok_idx]);
 *      tok_idx++;
 *    }
 *  }
 *
 *  if(tok_stream_free(&ts, &tokens[tok_idx])) {
 *    printf("last token '%s'\n", tokens[tok_idx]);
 *    tok_idx++;
 *  }
 *
 *  for(i = 0; i < tok_idx; i++)
 *    free(tokens[i]);
 * License: LGPL (v3 or any later version)
 * Author: anthony cantor <ar.cantor@gmail.com>
 */
int main(int argc, char *argv[])
{
	/* Expect exactly one argument */
	if (argc != 2)
		return 1;

	if (strcmp(argv[1], "depends") == 0) {
		printf("ccan/tok_itr\n");
		printf("ccan/array_size\n");
		return 0;
	}

	return 1;
}
